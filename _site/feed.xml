<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anthony Edwards Blog</title>
    <description></description>
    <link>aedwards12.github.io/blog//</link>
    <atom:link href="aedwards12.github.io/blog//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 27 Oct 2014 22:14:42 -0500</pubDate>
    <lastBuildDate>Mon, 27 Oct 2014 22:14:42 -0500</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Sql Injection, NoSql vs Sql</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-QhOwiLtbSCg/UXwh3jz3SxI/AAAAAAAAARM/Ll9oHyb4Dxw/s1600/SQL+Injection.jpg&quot; alt=&quot;alt text&quot; title=&quot;sql-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;what-is-sql-injection&quot;&gt;What is Sql Injection?&lt;/h4&gt;

&lt;p&gt;SQL injection is a common application layer web attack scheme used by hackers to steal data from companies. If you code is not done properly hackers are able to exploit your security vulnerability in an applications software by injecting SQL statements into an input field element on the website such as request forms, feedback forms, search bar, carts ect… These statements are sent to the backend database, if the proper code is not written to check these input SQL statements the attack will hackers to view information from the database or even wipe out all the data. As a new web developer the best way to prevent this would be to stop writing dynamic queries and/or prevent user supplied input which contains malicious SQL from affecting the logic of the executed query.&lt;/p&gt;

&lt;h4 id=&quot;sql-vs-nosql&quot;&gt;Sql vs NoSql&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Sql&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;NoSql&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SQL databases are primarily called as Relational Databases (RDBMS)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NoSQL database are primarily called as non-relational or distributed database&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SQL databases are table based databases whereas NoSQL databases are document based, key-value pairs, graph databases or wide-column stores.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NoSQL databases are the collection of key-value pair, documents, graph databases or wide-column stores which do not have standard schema definitions which it needs to adhered to.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SQL databases have predefined schema&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NoSQL databases have dynamic schema for unstructured data.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SQL databases are vertically scalable&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NoSQL databases are horizontally scalable.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SQL databases uses SQL ( structured query language ) for defining and manipulating the data,&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NoSQL database, queries are focused on collection of documents. Sometimes it is also called as UnQL (Unstructured Query Language).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SQL databases are good fit for the complex query intensive environment&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NoSQL databases are not good fit for complex queries. On a high-level, NoSQL don’t have standard interfaces to perform complex queries, and the queries themselves in NoSQL are not as powerful as SQL query language.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SQL database examples: MySql, Oracle, Sqlite, Postgres and MS-SQL.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NoSQL database examples: MongoDB, BigTable, Redis, RavenDb, Cassandra, Hbase, Neo4j and CouchDb&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;better-sql-queries&quot;&gt;Better Sql Queries&lt;/h4&gt;

&lt;p&gt;To retrieve data from the database we use SQL statements. When considering performance, the best query techniques should be used. There are a few ways to do this. 1. Indexing your column is a common way to optimize your search results. 2. Use the Symbol Operator such as &amp;gt;,&amp;lt;,=,!=, etc.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Use of a postfix wildcard instead of pre or full wildcard ‘%’&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hello%&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Use the LIKE, IN, EXIST or = symbol operator instead of a negative operator such as NOT LIKE, NOT IN, NOT EXIST or != symbol. Using a negative operator will cause the search to find every single row to identify that they are all not belong or exist with the table.&lt;/p&gt;

&lt;p&gt;Use the count operator to determine whether a particular data exists.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;COLUMN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Use index Unique column, Max and Min Operators, Select the most effecient data types possible and another would be to limit the result of the query.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Fri, 06 Jun 2014 11:24:54 -0500</pubDate>
        <link>aedwards12.github.io/blog//jekyll/update/2014/06/06/sql-injection-nosql-vs-sql.html</link>
        <guid isPermaLink="true">aedwards12.github.io/blog//jekyll/update/2014/06/06/sql-injection-nosql-vs-sql.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>What is Rails?</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://blog.ctf365.com/wp-content/uploads/2014/07/keep-calm-and-learn-ruby-on-rails-8-1024x576.png&quot; alt=&quot;alt text&quot; title=&quot;rails-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;what-is-rails&quot;&gt;What is Rails?&lt;/h4&gt;

&lt;p&gt;Rails is a full stack frame work built on top of the Ruby programming language. David Heinemeier is its creator. Rails is a package library called a RubyGem. Rails is specifically used to build websites. Combined with the Ruby programming language Rails allows the use of HTML, CSS and JavaScript to create a web application that runs on a web server. Rails is considered a server-side or back end web application development platform. Rails is designed to make building web applications simpler by utilizing convention over configurations.&lt;/p&gt;

&lt;p&gt;Ruby on rails uses the model-view-controller (MVC) pattern to organize application programming. A controller is a component of Rails that responds to external requests from the web server to the application by determining which view file to render. The controller may also have to query one or more models directly for information and pass these on to the view. . A view in the default configuration of Rails is an erb file, which is compiled to html at run-time.&lt;/p&gt;

&lt;p&gt;Rails encourages developers to use RESTful routes, which include actions such as: create, new, edit, update, destroy, show, and index. These mappings of incoming requests/routes to controller actions can be easily set up in the routes configuration file.&lt;/p&gt;

&lt;p&gt;Ruby on Rails includes tools that make common development tasks easier “out of the box”, such as scaffolding that can automatically construct some of the models and views needed for a basic website. Also included are WEBrick, a simple Ruby web server that is distributed with Ruby, and Rake, a build system, distributed as a gem. Together with Ruby on Rails, these tools provide a basic development environment.&lt;/p&gt;

&lt;p&gt;Ruby on Rails is also noteworthy for its extensive use of the JavaScript libraries Prototype and Script.aculo.us for Ajax. Ruby on Rails initially utilized lightweightSOAP for web services; this was later replaced by RESTful web services. Ruby on Rails 3.0 uses a technique called Unobtrusive JavaScript to separate the functionality (or logic) from the structure of the web page. jQuery is fully supported as a replacement for Prototype and is the default JavaScript library in Rails 3.1, reflecting an industry-wide move towards jQuery.&lt;/p&gt;

&lt;p&gt;Ruby on Rails is separated into various packages, namely ActiveRecord (an object-relational mapping system for database access), ActiveResource (provides web services), ActionPack, ActiveSupport and ActionMailer. Prior to version 2.0, Ruby on Rails also included the Action Web Service package that is now replaced by Active Resource. Apart from standard packages, developers can make plugins to extend existing packages.&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Jun 2014 11:24:54 -0500</pubDate>
        <link>aedwards12.github.io/blog//jekyll/update/2014/06/06/What-is-Rails.html</link>
        <guid isPermaLink="true">aedwards12.github.io/blog//jekyll/update/2014/06/06/What-is-Rails.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Margins, Borders, and Padding</title>
        <description>&lt;h4 id=&quot;overview&quot;&gt;Overview&lt;/h4&gt;
&lt;p&gt;All html block-level elements have five spacing properties: height, width, margin, border, and padding. When using these properties, we are primarily working with &amp;lt; div &amp;gt; tags or another block level element. &amp;lt; div &amp;gt; tags allow you to wrap, style, and position text in your webpage.&lt;/p&gt;

&lt;h3 id=&quot;border&quot;&gt;Border&lt;/h3&gt;
&lt;p&gt;Border properties allow you to specify the style and color of and elements border. ex: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://i1372.photobucket.com/albums/ag340/anthonyedwardsjr/ScreenShot2014-05-06at24040AM_zps73161d19.png&quot; alt=&quot;alt text&quot; title=&quot;border-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;padding&quot;&gt;Padding&lt;/h3&gt;
&lt;p&gt;Padding can be effectively be used to push or limit the content inside a block element. Think of it as putting up a railing before a cliff. Nothing can occupy that space between the railing and cliff. Padding also has 4 properties that can be changed independently top, bottom, left, and right. ex:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#same as padding: 10px 30px 10px 30px;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://i1372.photobucket.com/albums/ag340/anthonyedwardsjr/ScreenShot2014-05-06at23607AM_zps280c0fb6.png&quot; alt=&quot;alt text&quot; title=&quot;padding-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;margin&quot;&gt;Margin&lt;/h3&gt;
&lt;p&gt;Margins clear an area around an element outside the border. Margins prevent other element from getting to close. In other words give me “back up, give me space.” Margins have 4 properties that can be changed independently top, bottom, left, and right. ex:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://i1372.photobucket.com/albums/ag340/anthonyedwardsjr/ScreenShot2014-05-06at23116AM_zpsb0ad8df8.png&quot; alt=&quot;alt text&quot; title=&quot;margin-image&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Jun 2014 11:24:54 -0500</pubDate>
        <link>aedwards12.github.io/blog//jekyll/update/2014/06/06/Margin-Border-Padding.html</link>
        <guid isPermaLink="true">aedwards12.github.io/blog//jekyll/update/2014/06/06/Margin-Border-Padding.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
